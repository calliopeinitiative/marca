{# Marca/FileBundle/Resources/views/layout.html.twig #}

{% extends '::base.html.twig' %}

{% block title %}{{ application_name }} {% if app.request.get('resource')=='1' %}Resources{% else %}Projects{% endif %}{% endblock %}

{% block stylesheets %}
    {{ parent() }}
    <link type="text/css" rel="stylesheet" href="{{ asset('bundles/marcahome/css/theme.bootstrap.css') }}">
{% endblock %}

{% block javascripts %}
    {{ parent() }}
    <!-- tablesorter plugin -->
    <script src="{{ asset('bundles/marcahome/js/jquery.tablesorter.min.js') }}"></script>
    <!-- tablesorter widget file - loaded after the plugin -->
    <script src="{{ asset('bundles/marcahome/js/jquery.tablesorter.widgets.min.js') }}"></script>
    <script language="javascript">
        $(document).ready(function()
        {
            //set height for file listing
            $('.file-wrapper').css('max-height', function(index) {
                return $(window).height()* .88;
            });
            //set height of modal
            $('.modal-body').css('max-height', function(index) {
                return $(window).height() * .90;
            });
            //set click functions for new files
            $('#file_new_doc').click(function(){
                $('#file_modal').load('{{ course_path('file_new_modal', { 'resource': app.request.get('resource'), 'type': 'doc' }) }}');
            });
            $('#file_new_link').click(function(){
                $('#file_modal').load('{{ course_path('file_new_modal', { 'resource': app.request.get('resource'), 'type': 'link' }) }}');
            });
            $('#file_new_upload').click(function(){
                $('#file_modal').load('{{ course_path('file_upload', { 'resource': app.request.get('resource') }) }}');
            });
            $('[data-toggle="popover"]').popover({html:true,trigger:'hover'});

            //hover for settings etc
            $( "li" ).hover(
                    function() {
                        $(".default").hide();$( ".default", this ).show();
                    }
            );

            //click functions for editing file listings
            $('.settings').click(function(){
                var fileid = $(this).data('id');
                var url = "{{ course_path('file_edit_modal', { 'id': 'fileid', 'resource': app.request.get('resource') }) }}";
                url = url.replace("fileid", fileid);
                $('#file_modal').load(url);
            });
            $('.upload_review').click(function(){
                var fileid = $(this).data('id');
                var url = "{{ course_path('review_upload', { 'resource' : '0',  'fileid': 'fileid' }) }}";
                url = url.replace("fileid", fileid);
                $('#file_modal').load(url);
            });
            $('.delete_confirm').click(function(){
                var fileid = $(this).data('id');
                var url = "{{ course_path('file_show_modal', { 'id': 'fileid', 'resource': app.request.get('resource'),'source':'edit_modal'}) }}";
                url = url.replace("fileid", fileid);
                $('#file_modal').load(url);
            });

            {#//set active state#}
            {#$( ".project-sidebar").removeClass('project-sidebar-active');#}
            {#{% if heading =="Shared Files"  %}#}
            {#$( "[data-scope-index='sharedfile']").addClass('project-sidebar-active');#}
            {#{% elseif heading =="My Files" %}#}
            {#$( "[data-scope-index='myfiles']").addClass('project-sidebar-active');#}
            {#{% elseif heading =="Reviews for Me" %}#}
            {#$( "[data-scope-index='reviewsforme']").addClass('project-sidebar-active');#}
            {#{% elseif  heading =="Reviews by Me"  %}#}
            {#$( "[data-scope-index='reviewsbyme']").addClass('project-sidebar-active');#}
            {#{% else %}#}
            {#$( ".filter1").html('{{ heading }}');#}
            {#{% endif %}#}


            //create anchor for dropdown review find
            {% if 'file_reviews' in app.request.attributes.get('_route')  %}
            $('a.roll').click(function() {
                var id = $(this).data("id");
                var index = $(this).data("index");
                var courseid = $(this).data("index");
                var url = "{{ course_path('file_reviews', { 'userid': 'id', 'courseid':  app.request.get('courseid'), 'resource': app.request.get('resource') }) }}";
                url = url.replace("id", id);
                url = url.replace("index", index);
                $(this).attr("href", url).click();
            });
            {% endif %}

            //tablesorter for files
            $.extend($.tablesorter.themes.bootstrap, {
                table      : 'table',
                header     : 'bootstrap-header', // give the header a gradient background
                footerRow  : '',
                footerCells: '',
                icons      : '', // add "icon-white" to make them white; this icon class is added to the <i> in the header
                sortNone   : 'glyphicon glyphicon-sort',
                sortAsc    : 'glyphicon glyphicon-arrow-up',     // includes classes for Bootstrap v2 & v3
                sortDesc   : 'glyphicon glyphicon-arrow-down', // includes classes for Bootstrap v2 & v3
                active     : '', // applied when column is sorted
                hover      : '', // use custom css here - bootstrap class may not override it
                filterRow  : '', // filter row class
                even       : '', // odd row zebra striping
                odd        : ''  // even row zebra striping
            });
            // call the tablesorter plugin and apply the uitheme widget
            var $table = $("table").tablesorter({
                theme : "bootstrap",
                widthFixed: true,
                headerTemplate : '{content} {icon}', // new in v2.7. Needed to add the bootstrap icon!
                widgets : [ "uitheme", "filter"],
                widgetOptions : {
                    // use the filter_external option OR use bindSearch function (below)
                    // to bind external filters.
                    // filter_external : '.search',

                    filter_columnFilters: true,
                    filter_saveFilters : false,
                    filter_reset: '.reset'
                }
            });
            $.tablesorter.filter.bindSearch( $table, $('.search') );

            //links for filtering columns; dashes are reserved for ranges and so must be escaped for the filter
            $('.link-filter').click(function() {
                var filters = $('table').find('input.tablesorter-filter'),
                        col = $(this).data('filter-column'),
                        txt = $(this).data('filter-text').replace(/[-]/, '*');
                        // var index = $(this).data('index') + 1;
                        // var selector ='a[data-index=' + index + ']';
                        // var next_name = $(selector).html();
                        // $('.next').html(next_name).attr('data-filter-text', next_name).attr('data-index', index + 1);
                filters.eq(col).val(txt).trigger('search', false);
                //replace the dash for displaying
                txt = txt.replace(/[*]/, '-');


                // count files after filtering
                var count = $('#file_list tr').not(':hidden').length - 1;
                var count_text = ' ' + count + ' files found';
                $('span.file_count').html(count_text);
                // filter breadcrumbs
                if (col==1){
                    if (txt=='') {txt='Shared Files';$('#allauthors').hide();} else {txt='Files by ' + txt;$('#allauthors').show();}
                    $('.filter1').html(txt);
                } else if (col==2){
                    $('.filter2').html(txt);
                } else if (col==3){
                    var color =  $(this).data('color');
                    var togglelabel = 'filter3 label ' + color;
                    $('.filter3').html(txt).removeClass().addClass(togglelabel);
                }
            });
            //hide filter row
            $('input.tablesorter-filter').addClass('hidden');
            $('tr.tablesorter-filter-row').addClass('hidden');

            $( "tr" ).hover(
                    function() {
                        $(".file-menu").hide();$( ".file-menu", this ).toggle();
                    }
            );
            $( "i" ).hover(
                    function() {
                        $(".tablesorter-icon").show();$( ".tablesorter-icon", this ).toggle();
                    }
            );
            $('.file_name').bind('focus', function(){ $(".file-menu").hide();$(this).parent().children("div").children("div").toggle(); });

            // count files after filtering in find
            var count = $('#file_list tr').not(':hidden').length - 1;
            var count_text = ' ' + count + ' files found';
            $('span.file_count').html(count_text);
            // show labels only on page
            $( "td.labels > span.label-default" ).each(function( index ) {
                var text = $( this ).text();
                $("a[data-filter-text='" + text + "']").removeClass('hidden');
            });

        });
    </script>
{% endblock %}

{% block coursenav %}
    {{ render_esi(controller('MarcaCourseBundle:Course:createCoursenav', { 'courseid': app.request.get('courseid') })) }}
{% endblock %}


{% block sidebar %}
    {% if app.request.get('resource')=='0' %}
    {{ render_esi(controller('MarcaFileBundle:File:createFilesSidebar', { 'courseid': app.request.get('courseid'),
    'resource': app.request.get('resource')})) }}
    {% else %}
    {{ render_esi(controller('MarcaFileBundle:Resource:createResourcesSidebar', { 'courseid': app.request.get('courseid'),
    'resource': app.request.get('resource')})) }}
    {% endif %}
{% endblock %}
